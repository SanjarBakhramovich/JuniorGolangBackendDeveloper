//–ù–∞–ø–∏—Å–∞—Ç—å Struct of slice without using slice ‚úÖ
// Struct should include cap, len, pointer to arr ‚úÖ
// cap of array should be assigned by const ‚úÖ

// major methods should be add, delete, and binSearch [CRUD]

package main

import (
	"JuniorSpecMod/StructOfSlice/slicePckg"
	"fmt"
)

// MAIN
func main() {

	arr := [slicePckg.ArrCap]int{4, 5, 6, 7}
	arry := &slicePckg.StructOfArr{
		Length: 3,
		Cap:    slicePckg.ArrCap,
		Arr:    &arr,
	}

	var cifra int
	fmt.Print("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª—É—é —Ü–∏—Ñ—Ä—É –æ—Ç 0-9 –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –º–∞—Å—Å–∏–≤–µ\n")
	fmt.Scan(&cifra)
	//

	//
	res := slicePckg.BinSearch(arry.Arr, arry.Length, cifra)

	if res != -1 {
		fmt.Printf("\n–í–∞—à–∞ —Ü–∏—Ñ—Ä–∞ %d –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∏–Ω–¥–µ–∫—Å–µ %d\n", cifra, res)
	} else {
		fmt.Printf("–í–∞—à–∞ —Ü–∏—Ñ—Ä–∞ %d –Ω–µ –Ω–∞–π–¥–µ–Ω–∞\n", cifra)
	}

	fmt.Println(arr)
	fmt.Printf("\n–ß—Ç–æ –±—ã –¥–æ–±–∞–≤–∏—Ç—å —Ü–∏—Ñ—Ä—É –∫ –º–∞—Å—Å–∏–≤—É –Ω–∞–ø–∏—à–∏—Ç–µ —Ü–∏—Ñ—Ä—É 1,\n—á—Ç–æ –±—ã —É–¥–∞–ª–∏—Ç—å, —Ü–∏—Ñ—Ä—É 0\n")
	//
	var addOrDelete int
	fmt.Scan(&addOrDelete)
	//

	if addOrDelete == 1 {

		fmt.Printf("–ù–∞–ø–∏—à–∏—Ç–µ —Ü–∏—Ñ—Ä—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å\n")
		var newInt int
		fmt.Scan(&newInt)
		//
		if arry.Add(newInt) {
			fmt.Println("–ú–∞—Å—Å–∏–≤ –ø–æ–ª–æ–Ω, –Ω–µ–ª—å–∑—è –¥–æ–±–∞–≤–∏—Ç—å —Ü–∏—Ñ—Ä—É")
		} else {
			fmt.Printf("–¶–∏—Ñ—Ä–∞ %d –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –º–∞—Å—Å–∏–≤\n", newInt)
			fmt.Println(arry.Arr)
		}
		//
		addNumArr := arry.Add(newInt)
		// fmt.Println(addNumArr)
		if addNumArr {
			fmt.Printf("–¶–∏—Ñ—Ä–∞ %d –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –º–∞—Å—Å–∏–≤\n", newInt)
			fmt.Println(arry.Arr)
		}
	}
	// –î–æ–±–∞–≤–∏—Ç—å Create = add üîç
	// Delete = delete üîç
	// Update üîç
	// Read üîç

}

// –ú—ç–π–Ω –∑–¥–µ–ª–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–º —Ñ–∞–π–ª–æ–º
// –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä (–≤—ã–∑—ã–≤–∞—Ç—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —á–µ—Ä–µ–∑ –º—ç–π–Ω)
// package slice –æ—Ç–¥–µ–ª—å–Ω—ã–π —Å–æ–∑–¥–∞—Ç—å
// –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å slice –≤ main
// –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç getSlice
// –ú–µ—Ç–æ–¥—ã –∑–¥–µ–ª–∞—Ç—å –ø—É–±–ª–∏—á–Ω—ã–º–∏
